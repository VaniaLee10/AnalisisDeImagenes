/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import static java.lang.Math.random;
import java.util.Random;
import javax.swing.ImageIcon;

/**
 *
 * @author Eduardo
 */
public class IFrame extends java.awt.Frame {

    /**
     * Creates new form IFrame
     */
    public IFrame(Image imagen) {
        initComponents();
        
        //Obtener un tono random de la imagen
        int w = imagen.getWidth(null);
        int h = imagen.getHeight(null);
        //BufferedImage buffer = herramientas.HerramientasImagen.toBufferedImage(imagen);
        Image escalada = imagen.getScaledInstance(w/4, h/4, BufferedImage.TYPE_CUSTOM);
        BufferedImage biEscalada = herramientas.HerramientasImagen.toBufferedImage(escalada);
        //System.out.println("W: " + w + " ,  H: " + h);
        System.out.println("Width "+biEscalada.getWidth()+", Height: "+biEscalada.getHeight());
        
        /*//Sacar un pixel random 
        int randw = (int) (Math.random() * w/5);
        int randh = (int) (Math.random() * h/5);
        System.out.println("Pixel: "+randw+", "+randh);
        //Obtener el rgb 
        Color rgb = new Color(buffer.getRGB(randw,randh));
        //Determinar el color
        System.out.println("RGB: "+rgb);
        //Determinar si es cielo, pasto, piedra, nubes        
        //Mandar la imagen al label*/
        
        /*
        Color verdeRand = new Color(88,111,7); //Verde pasto oscuro
        int cod = verdeRand.getRGB();
        Color verdeRand2 = new Color(101, 131, 1); //Verde pasto oscuro deben de ser 14
        int cod2 = verdeRand2.getRGB();
        Color verdeRand3 = new Color(108, 130, 6); //Verde pasto oscuro deben de ser 14
        int cod3 = verdeRand3.getRGB();
        Color verdeRand4 = new Color(104, 128, 4); //Verde pasto oscuro deben de ser 14
        int cod4 = verdeRand4.getRGB();
        Color verdeRand5 = new Color(101, 129, 6); //Verde pasto oscuro deben de ser 14
        int cod5 = verdeRand5.getRGB();
        Color verdeRand6 = new Color(110, 137, 8); //Verde pasto oscuro deben de ser 14
        int cod6 = verdeRand6.getRGB();
        Color verdeRand7 = new Color(68, 101, 0); //Verde pasto oscuro deben de ser 14
        int cod7 = verdeRand7.getRGB();
        //Pintar los 14 pixeles con un color notable para que se vea
        Color rojo = new Color(255, 0, 0); //Verde pasto oscuro
        //Buscar la frecuencia (numero de pixeles) del mismo color
        
        System.out.println("Codigo entero del color:" + cod);
        int contador = 0;
        int contador2 = 0;
        for(int x=0; x<biEscalada.getWidth();x++){
            for(int y=0; y<biEscalada.getHeight(); y++){
                Color rgbPixel = new Color(biEscalada.getRGB(x,y));
                int codPixel = rgbPixel.getRGB();
                //System.out.println(codPixel);
                if(codPixel == cod || codPixel == cod2 || codPixel == cod3 || codPixel == cod4 || codPixel == cod5 || codPixel == cod6 || codPixel == cod7){
                    biEscalada.setRGB(x, y, rojo.getRGB());
                    System.out.println("x: "+x+", "+y);
                    contador++;
                }
            }
        }
        System.out.println("Frecuencias: "+contador);  
        System.out.println("Frecuencias 2: "+contador2);
        */
        
        herramientas.HerramientasImagen.calcularHistograma(escalada);
        
        this.imagenEtiqueta.setIcon(new ImageIcon(escalada));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagenEtiqueta = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        add(imagenEtiqueta, java.awt.BorderLayout.NORTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Image imagen = herramientas.HerramientasImagen.abrirImagen();
                new IFrame(imagen).setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imagenEtiqueta;
    // End of variables declaration//GEN-END:variables
}
